---
title: "Saga Orchestration: Get Order History"
---

sequenceDiagram
autonumber
actor User
participant OrderHistoryHandlers
participant CustomerServiceProxy
participant OrderServiceProxy

User -> OrderHistoryHandlers: getOrderHistory

OrderHistoryHandlers-->>CustomerServiceProxy: findCustomerById()
alt valid input
CustomerServiceProxy->> CustomerServiceProxy: Mono(Id)
CustomerServiceProxy--> OrderHistoryHandlers: Mono(Id)
else invalid id
CustomerServiceProxy->> CustomerServiceProxy: Mono(Empty)
CustomerServiceProxy->> OrderHistoryHandlers: Mono(Empty)
else unknown service
CustomerServiceProxy->> CustomerServiceProxy: Mono("Unknown")
CustomerServiceProxy->> OrderHistoryHandlers: Mono("Unknown")
Note left of CustomerServiceProxy: Depends on valid customerId and known service
end

OrderHistoryHandlers--> OrderServiceProxy: findOrdersByCustomerId
alt valid input
OrderServiceProxy->> OrderServiceProxy: status
OrderServiceProxy->> OrderServiceProxy: response
OrderServiceProxy--> OrderHistoryHandlers: Mono<List<GetOrderResponse>>
else invalid id
OrderServiceProxy->> OrderServiceProxy: status
OrderServiceProxy->> OrderServiceProxy: response
OrderServiceProxy--> OrderHistoryHandlers: Mono<Error>
Note left of OrderServiceProxy: Depends on status of GetOrderResponse
end

OrderHistoryHandlers->> OrderHistoryHandlers: possibleCustomerAndOrders()
OrderHistoryHandlers->> OrderHistoryHandlers: create GetCustomerHistoryResponse(customerId, customerName, customerCreditLimit, List<GetOrderResponse>)
OrderHistoryHandlers--> User: GetOrderHistoryResponse
